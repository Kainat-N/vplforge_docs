"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[976],{7879:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"intro","title":"What is VPLForge?","description":"VPLForge is a framework designed to facilitate the creation of visual programming languages (VPLs). It aims to streamline the development of VPLs by offering reusable components and design tools.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/vplforge_docs/docs/intro","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"User Manual","permalink":"/vplforge_docs/docs/category/user-manual"}}');var i=s(4848),o=s(8453);const t={sidebar_position:1},l="What is VPLForge?",a={},d=[{value:"1. Overview of the Framework",id:"1-overview-of-the-framework",level:2},{value:"Technologies Used",id:"technologies-used",level:3},{value:"1.2 Rationale Behind VPLForge",id:"12-rationale-behind-vplforge",level:2},{value:"The Problem VPLForge Aims to Solve",id:"the-problem-vplforge-aims-to-solve",level:3},{value:"Why It&#39;s Needed in the Current VPL Ecosystem",id:"why-its-needed-in-the-current-vpl-ecosystem",level:3},{value:"1.3 Target Audience",id:"13-target-audience",level:2},{value:"1.4 Use Cases",id:"14-use-cases",level:2},{value:"1.5 Benefits of VPLForge",id:"15-benefits-of-vplforge",level:2},{value:"1.6 About Visual Programming Languages (VPLs)",id:"16-about-visual-programming-languages-vpls",level:2},{value:"Common Types of VPLs",id:"common-types-of-vpls",level:3},{value:"Try a Demo",id:"try-a-demo",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"what-is-vplforge",children:"What is VPLForge?"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"VPLForge"})," is a framework designed to facilitate the creation of visual programming languages (VPLs). It aims to streamline the development of VPLs by offering reusable components and design tools."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"1-overview-of-the-framework",children:"1. Overview of the Framework"}),"\n",(0,i.jsx)(n.p,{children:"VPLForge enables rapid development of visual programming environments by providing:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A modular architecture for building custom VPLs"}),"\n",(0,i.jsx)(n.li,{children:"Integration with domain-specific tools"}),"\n",(0,i.jsx)(n.li,{children:"Support for code generation and simulation"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"technologies-used",children:"Technologies Used"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"React.js for the visual interface"}),"\n",(0,i.jsx)(n.li,{children:"TypeScript for type-safe development"}),"\n",(0,i.jsx)(n.li,{children:"WebAssembly for performance-critical components"}),"\n",(0,i.jsx)(n.li,{children:"Graph-based layout engine"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"12-rationale-behind-vplforge",children:"1.2 Rationale Behind VPLForge"}),"\n",(0,i.jsx)(n.h3,{id:"the-problem-vplforge-aims-to-solve",children:"The Problem VPLForge Aims to Solve"}),"\n",(0,i.jsx)(n.p,{children:"Most existing VPLs are built from scratch, requiring significant effort and expertise. VPLForge reduces this burden by offering reusable and extensible components."}),"\n",(0,i.jsx)(n.h3,{id:"why-its-needed-in-the-current-vpl-ecosystem",children:"Why It's Needed in the Current VPL Ecosystem"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Lack of standardization"}),"\n",(0,i.jsx)(n.li,{children:"Poor scalability in educational tools"}),"\n",(0,i.jsx)(n.li,{children:"Difficulty adapting VPLs for new domains (e.g., robotics, IoT)"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"13-target-audience",children:"1.3 Target Audience"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"VPL Designers"}),": Developers, researchers, and educators designing new VPLs."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"VPL Users"}),": Students, hobbyists, and domain experts using low-code tools."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"14-use-cases",children:"1.4 Use Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\ud83c\udf93 ",(0,i.jsx)(n.strong,{children:"Educational Tools"}),": Create intuitive block-based environments for teaching coding."]}),"\n",(0,i.jsxs)(n.li,{children:["\u2699\ufe0f ",(0,i.jsx)(n.strong,{children:"Rapid Prototyping"}),": Build quick workflows for IoT and robotics projects."]}),"\n",(0,i.jsxs)(n.li,{children:["\ud83e\udde0 ",(0,i.jsx)(n.strong,{children:"Domain-Specific Automation"}),": Tailor VPLs for business logic, automation, or simulations."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"15-benefits-of-vplforge",children:"1.5 Benefits of VPLForge"}),"\n",(0,i.jsx)(n.p,{children:"VPLForge offers several key advantages to developers and users of visual programming environments:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Ease of Defining VPLs"}),": Provides reusable components to reduce boilerplate and speed up development."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Instant Execution and Testing"}),": Integrated testing tools allow for quick iteration and feedback."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cross-Platform and Offline Availability"}),": Built as a web-based platform that works on all major operating systems\u2014even offline."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"16-about-visual-programming-languages-vpls",children:"1.6 About Visual Programming Languages (VPLs)"}),"\n",(0,i.jsx)(n.p,{children:"Visual Programming Languages (VPLs) allow users to create programs by manipulating graphical elements rather than writing code in text-based formats."}),"\n",(0,i.jsx)(n.h3,{id:"common-types-of-vpls",children:"Common Types of VPLs"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Block-Based Programming"}),": Users create logic using draggable blocks (e.g., Scratch, Blockly)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Flowchart-Based Programming"}),": Visualizes control flow using process diagrams (e.g., RAPTOR)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Dataflow-Based Programming"}),": Connects data between operations using wires or links (e.g., LabVIEW)."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"VPLForge supports the creation of all these types of VPLs and can be extended to hybrid systems."}),"\n",(0,i.jsx)(n.h2,{id:"try-a-demo",children:"Try a Demo"}),"\n",(0,i.jsxs)(n.p,{children:["Get started by ",(0,i.jsx)(n.strong,{children:"trying a demo"})," at ",(0,i.jsx)(n.a,{href:"https://vplforge.nullprime.com/",children:"vplforge demo"}),"."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"npm run start"})," command builds your website locally and serves it through a development server, ready for you to view at ",(0,i.jsx)(n.a,{href:"http://localhost:3000/",children:"http://localhost:3000/"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Open ",(0,i.jsx)(n.code,{children:"docs/intro.md"})," (this page) and edit some lines: the site ",(0,i.jsx)(n.strong,{children:"reloads automatically"})," and displays your changes."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>l});var r=s(6540);const i={},o=r.createContext(i);function t(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);